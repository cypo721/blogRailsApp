== README

== Blog rails App

Vytvořte Ruby on Rails (RoR) aplikaci s využitím probíraných gemů:
1. Výsledkem vaší práce bude jednoduchá blogovací platforma s použitím probíraných gemů.
2. Vytvořte novou Rails aplikaci a nasaďte na ni exception_notification, pry, better_errors a web-console.
3. Mohou se zaregistrovat noví uživatelé (gem devise) a přidávat příspěvky.
4. Nový uživatel musí být potvrzený mailem (gem devise, letter_opener na localhostu)
5. Uživatelé vidí příspěvky ostatních, mohou ale editovat pouze ty svoje (gem cancancan, rolify).
6. Uživatelé mají svůj avatar - obrázek si mohou měnit (gem papeclip).
7. Existuje superadmin, vidí všechny uživatele a může editovat jejich příspěvky.
8. Aplikaci nasaďdte na Heroku a odevzdejte zdrojový kód a README soubor s url na Heroku a loginem pro superadmina.
Pro vývoj aplikace můžete použít gem rails_admin nebo standardní scaffolld (slim, twitter-bootstrap-rails, simple_form)

<tt>rake doc:app</tt>.




Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. If you are deploying on Heroku with Rails 3.2 only, you may want to set:

       config.assets.initialize_on_precompile = false

     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:

       rails g devise:views
